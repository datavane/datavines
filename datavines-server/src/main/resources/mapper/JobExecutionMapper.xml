<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.datavines.server.repository.mapper.JobExecutionMapper">

    <sql id="basic_sql">
        select * from dv_job_execution
                 <where>
                     <if test="jobId != null">
                          and job_id = #{jobId}
                     </if>
                     <if test="metricType != null">
                         and metric_type = #{metricType}
                     </if>
                     <if test="schemaName != null">
                         and schema_name = #{schemaName}
                     </if>
                     <if test="tableName != null">
                         and table_name = #{tableName}
                     </if>
                     <if test="columnName != null">
                         and column_name = #{columnName}
                     </if>
                     <if test="startTime != null and startTime != ''">
                         and update_time &gt;= #{startTime}
                     </if>
                     <if test="endTime != null and endTime != ''">
                         and update_time &lt;= #{endTime}
                     </if>
                     <if test="datasourceId != null">
                         and datasource_id = #{datasourceId}
                     </if>
                     <if test="status != null">
                         and status = #{status}
                     </if>

                 </where>
    </sql>

    <sql id="basic_sql_1">
        select * from dv_job_execution
        <where>
            <if test="metricType != null">
                and metric_type = #{metricType}
            </if>
            <if test="schemaName != null">
                and schema_name = #{schemaName}
            </if>
            <if test="tableName != null">
                and table_name = #{tableName}
            </if>
            <if test="columnName != null">
                and column_name = #{columnName}
            </if>
            <if test="startTime != null">
                and update_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and update_time &lt;= #{endTime}
            </if>
            <if test="datasourceId != null">
                and datasource_id = #{datasourceId}
            </if>
        </where>
    </sql>

    <sql id="basic_sql_2">
        select DATE_FORMAT(create_time, '%Y-%m-%d') AS create_date, status  from dv_job_execution
        <where>
            <if test="metricType != null">
                and metric_type = #{metricType}
            </if>
            <if test="schemaName != null">
                and schema_name = #{schemaName}
            </if>
            <if test="tableName != null">
                and table_name = #{tableName}
            </if>
            <if test="columnName != null">
                and column_name = #{columnName}
            </if>
            <if test="startTime != null">
                and create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and create_time &lt;= #{endTime}
            </if>
            <if test="datasourceId != null">
                and datasource_id = #{datasourceId}
            </if>
        </where>
    </sql>

    <select id="getJobExecutionPage" resultType="io.datavines.server.api.dto.vo.JobExecutionVO">
        select p.id, p.name, p.schema_name, p.table_name, p.column_name, p.metric_type, p.job_type, p.status, p.start_time, p.end_time, p.update_time from (<include refid="basic_sql"/>) p
        <where>
            <if test="searchVal != null">
                LOWER(p.`name`) LIKE CONCAT(CONCAT('%', LOWER(#{searchVal})), '%')
            </if>
            <if test="schemaSearch != null and schemaSearch != ''">
                AND LOWER(p.schema_name) LIKE CONCAT(CONCAT('%', LOWER(#{schemaSearch})), '%')
            </if>
            <if test="tableSearch != null and tableSearch != ''">
                AND LOWER(p.table_name) LIKE CONCAT(CONCAT('%', LOWER(#{tableSearch})), '%')
            </if>
            <if test="columnSearch != null and columnSearch != ''">
                AND LOWER(p.column_name) LIKE CONCAT(CONCAT('%', LOWER(#{columnSearch})), '%')
            </if>
        </where>
        order by p.update_time desc

    </select>

    <select id="getJobExecutionAggPie" resultType="io.datavines.server.api.dto.vo.JobExecutionAggItem">
        select p.status as `name`, count(1) as `value` from (<include refid="basic_sql_1"/>) p GROUP BY p.status
    </select>

    <select id="getJobExecutionTrendBar" resultType="io.datavines.server.api.dto.vo.JobExecutionTrendBarItem">
        select p.create_date, status, count(1) as num from (<include refid="basic_sql_2"/>) p group by p.create_date,p.status order by create_date
    </select>

    <select id="getJobExecutionStat" resultType="io.datavines.server.api.dto.vo.JobExecutionStat">
        select p.job_id,
               count(1) as total_count,
               sum(if(status = 6, 1, 0)) as fail_count,
               sum(if(status = 7, 1, 0)) as success_count,
               max(start_time) as last_job_execution_time,
               min(start_time) as first_job_execution_time
        from dv_job_execution p
        <where>
            <if test="jobId != null">
                and job_id = #{jobId}
            </if>
        </where>
        group by p.job_id
    </select>
</mapper>